:root {
  /* Color scheme from www.awwwards.com <3 */
  --awww-white: #f4f7f6;
  --awww-black: #202121;
  --awww-bluegreen: #49c5b6;
  --awww-yellow: #fef7c0;
  --awww-grey: #a6abab;
  --awww-dark-grey: #707070;
  /* Font stacks */
  --font-headings: 'Helvetica', sans-serif;
  --font-body: 'Times New Roman', serif;
}

html {
  box-sizing: border-box;
}

* {
  outline: 1px solid red;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  background-color: var(--awww-white);
  background: var(--awww-bluegreen, red);
  background: linear-gradient(var(--awww-white), var(--awww-dark-grey));
  font-family: var(--font-body);
}

h1,
h2,
h3,
h4 {
  color: var(--awww-black);
  font-family: var(--font-headings);
  /* Huh? */
  /* font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif */
}

img {
  width: 100%;
  max-width: 600px;
}

figure {
  margin: 0;
  padding: 0;
  display: flex;
  flex-flow: column;
  justify-content: space-between;
}

figcaption {
  align-self: flex-end;
}

.grid {
  max-width: 960px;
  display: grid;
  margin: auto;
  grid-template-columns: 200px 200px 200px;
  grid-template-columns: 1fr 1fr 1fr;
  /* Same as above but with repeat function */
  grid-template-columns: repeat(3, 1fr);
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));

  /* grid-auto-rows: minmax(300px, 1fr); */
  /* Shorthand */
  grid-gap: 15px;
}

/* form {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-column: 1 / 4;
} */

form {
  grid-column: 1 / -1;
}

input {
  padding: 20px;
  width: 100%;
}

/* @media (min-width: 615px) {

  body {
    background-color: red;
  }

  form {
    grid-column: span 2 / -1;
  }
}

@media (min-width: 930px) {

  body {
    background-color: yellow;
  }

  form {
    grid-column: span 3 / -1;
  }

} */
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2Nzcy9zdHlsZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwyQ0FBMkM7RUFDM0Msc0JBQXNCO0VBQ3RCLHNCQUFzQjtFQUN0QiwwQkFBMEI7RUFDMUIsdUJBQXVCO0VBQ3ZCLHFCQUFxQjtFQUNyQiwwQkFBMEI7RUFDMUIsaUJBQWlCO0VBQ2pCLHlDQUF5QztFQUN6QyxzQ0FBc0M7Q0FDdkM7O0FBRUQ7RUFDRSx1QkFBdUI7Q0FDeEI7O0FBRUQ7RUFDRSx1QkFBdUI7Q0FDeEI7O0FBRUQ7OztFQUdFLG9CQUFvQjtDQUNyQjs7QUFFRDtFQUNFLG9DQUFvQztFQUNwQyx1Q0FBdUM7RUFDdkMsc0VBQXNFO0VBQ3RFLDhCQUE4QjtDQUMvQjs7QUFFRDs7OztFQUlFLHlCQUF5QjtFQUN6QixrQ0FBa0M7RUFDbEMsVUFBVTtFQUNWLDhJQUE4STtDQUMvSTs7QUFFRDtFQUNFLFlBQVk7RUFDWixpQkFBaUI7Q0FDbEI7O0FBRUQ7RUFDRSxVQUFVO0VBQ1YsV0FBVztFQUNYLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsK0JBQStCO0NBQ2hDOztBQUVEO0VBQ0UscUJBQXFCO0NBQ3RCOztBQUVEO0VBQ0UsaUJBQWlCO0VBQ2pCLGNBQWM7RUFDZCxhQUFhO0VBQ2IseUNBQXlDO0VBQ3pDLG1DQUFtQztFQUNuQyw0Q0FBNEM7RUFDNUMsc0NBQXNDO0VBQ3RDLDREQUE0RDs7RUFFNUQseUNBQXlDO0VBQ3pDLGVBQWU7RUFDZixlQUFlO0NBQ2hCOztBQUVEOzs7O0lBSUk7O0FBRUo7RUFDRSxvQkFBb0I7Q0FDckI7O0FBRUQ7RUFDRSxjQUFjO0VBQ2QsWUFBWTtDQUNiOztBQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFxQkkiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOnJvb3Qge1xuICAvKiBDb2xvciBzY2hlbWUgZnJvbSB3d3cuYXd3d2FyZHMuY29tIDwzICovXG4gIC0tYXd3dy13aGl0ZTogI2Y0ZjdmNjtcbiAgLS1hd3d3LWJsYWNrOiAjMjAyMTIxO1xuICAtLWF3d3ctYmx1ZWdyZWVuOiAjNDljNWI2O1xuICAtLWF3d3cteWVsbG93OiAjZmVmN2MwO1xuICAtLWF3d3ctZ3JleTogI2E2YWJhYjtcbiAgLS1hd3d3LWRhcmstZ3JleTogIzcwNzA3MDtcbiAgLyogRm9udCBzdGFja3MgKi9cbiAgLS1mb250LWhlYWRpbmdzOiAnSGVsdmV0aWNhJywgc2Fucy1zZXJpZjtcbiAgLS1mb250LWJvZHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBzZXJpZjtcbn1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbioge1xuICBvdXRsaW5lOiAxcHggc29saWQgcmVkO1xufVxuXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYXd3dy13aGl0ZSk7XG4gIGJhY2tncm91bmQ6IHZhcigtLWF3d3ctYmx1ZWdyZWVuLCByZWQpO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodmFyKC0tYXd3dy13aGl0ZSksIHZhcigtLWF3d3ctZGFyay1ncmV5KSk7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWJvZHkpO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCB7XG4gIGNvbG9yOiB2YXIoLS1hd3d3LWJsYWNrKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtaGVhZGluZ3MpO1xuICAvKiBIdWg/ICovXG4gIC8qIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIFJvYm90bywgT3h5Z2VuLCBVYnVudHUsIENhbnRhcmVsbCwgJ09wZW4gU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWYgKi9cbn1cblxuaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogNjAwcHg7XG59XG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuZmlnY2FwdGlvbiB7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xufVxuXG4uZ3JpZCB7XG4gIG1heC13aWR0aDogOTYwcHg7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIG1hcmdpbjogYXV0bztcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyMDBweCAyMDBweCAyMDBweDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgLyogU2FtZSBhcyBhYm92ZSBidXQgd2l0aCByZXBlYXQgZnVuY3Rpb24gKi9cbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgzMDBweCwgMWZyKSk7XG5cbiAgLyogZ3JpZC1hdXRvLXJvd3M6IG1pbm1heCgzMDBweCwgMWZyKTsgKi9cbiAgLyogU2hvcnRoYW5kICovXG4gIGdyaWQtZ2FwOiAxNXB4O1xufVxuXG4vKiBmb3JtIHtcbiAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XG4gIGdyaWQtY29sdW1uLWVuZDogNDtcbiAgZ3JpZC1jb2x1bW46IDEgLyA0O1xufSAqL1xuXG5mb3JtIHtcbiAgZ3JpZC1jb2x1bW46IDEgLyAtMTtcbn1cblxuaW5wdXQge1xuICBwYWRkaW5nOiAyMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLyogQG1lZGlhIChtaW4td2lkdGg6IDYxNXB4KSB7XG5cbiAgYm9keSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICB9XG5cbiAgZm9ybSB7XG4gICAgZ3JpZC1jb2x1bW46IHNwYW4gMiAvIC0xO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5MzBweCkge1xuXG4gIGJvZHkge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcbiAgfVxuXG4gIGZvcm0ge1xuICAgIGdyaWQtY29sdW1uOiBzcGFuIDMgLyAtMTtcbiAgfVxuXG59ICovIl19 */